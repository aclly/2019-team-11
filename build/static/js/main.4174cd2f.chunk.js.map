{"version":3,"sources":["ui-core/components/header.js","server-core/api-client.js","server-core/location-service.js","server-core/main-service.js","ui-core/modals/address.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","title","react_default","a","createElement","className","AppBar_default","position","_callee","huc","query","regenerator_default","wrap","_context","prev","next","axios","get","then","response","console","log","convert","xml2json","compact","spaces","catch","error","stop","_callee2","isHuc12","huc8","_context2","length","substring","abrupt","data","sites","filteredSites","filter","site","huc12","Promise","resolve","map","id","siteIds","all","fetchFibiDataBySiteId","results","concat","apply","_callee3","siteId","_context3","_callee4","characteristicName","_context4","_callee5","_context5","_callee6","lat","long","_context6","api_client","getEcoliData","getFibiData","getEpaStations","getSampleResults","getHuc","address","params","outFields","outSR","latestWkid","wkid","f","SingleLine","candidates","reject","firstCandidate","spatialReference","x","location","y","getWatershedData","spatialRel","where","geometryType","inSR","geometry","features","attributes","HUC12","location_service","getHucFromAddress","layer","loc","sent","api","getNitrateData","main_service","getData","AddressModal","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","target","_ref","setState","value","_this2","Card_default","CardHeader_default","CardContent_default","TextField_default","type","placeholder","onChange","CardActions_default","Button_default","size","variant","color","onClick","API","Component","theme","createMuiTheme","palette","primary","blue","secondary","main","typography","useNextVariants","App","styles","components_header","dist","google","style","width","height","zoom","initialCenter","lng","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","icon","url","anchor","window","maps","Point","scaledSize","Size","ui_core_modals_address","handleClose","show","GoogleApiWrapper","apiKey","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4174cd2f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport \"./header.css\";\r\n\r\nconst Header = props => {\r\n    const { title } = props;\r\n    return (\r\n        <div className=\"header\">\r\n            <AppBar position=\"static\">\r\n                <label>{title}</label>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import convert from \"xml-js\";\r\nimport axios from \"axios\";\r\n\r\nasync function getEcoliData(huc) {\r\n    var url = \"https://www.waterqualitydata.us/data/Result/search?\";\r\n    var query =\r\n        \"startDateLo=01-01-2017&huc=\" +\r\n        huc +\r\n        \"&mimeType=xml&characteristicName=Escherichia%20coli\";\r\n    axios\r\n        .get(url + query)\r\n        .then(function(response) {\r\n            // handle success\r\n            console.log(response);\r\n            return convert.xml2json(response, { compact: true, spaces: 4 });\r\n        })\r\n        .catch(function(error) {\r\n            // handle error\r\n            console.log(error);\r\n            return \"She get wet\";\r\n        });\r\n}\r\n\r\nasync function getFibiData(huc) {\r\n    var isHuc12 = huc.length === 12;\r\n    var huc8 = huc.substring(0, 8);\r\n    var url = \"https://programs.iowadnr.gov/bionet/api/v1/sites/by_huc8/\";\r\n\r\n    return axios\r\n        .get(url + huc8)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .then(sites => {\r\n            if (isHuc12) {\r\n                var filteredSites = sites.filter(site => site.huc12 === huc);\r\n                return Promise.resolve(filteredSites);\r\n            }\r\n            return Promise.resolve(sites);\r\n        })\r\n        .then(sites => {\r\n            return sites.map(site => site.id);\r\n        })\r\n        .then(siteIds => {\r\n            return Promise.all(siteIds.map(fetchFibiDataBySiteId));\r\n        })\r\n        .then(results => {\r\n            return [].concat.apply([], results);\r\n        })\r\n        .catch(function(error) {\r\n            // handle error\r\n            console.log(error);\r\n            return \"error\";\r\n        });\r\n}\r\n\r\nasync function fetchFibiDataBySiteId(siteId) {\r\n    var url = \"https://programs.iowadnr.gov/bionet/api/v1/fish/fibi/by_site/\";\r\n    return axios.get(url + siteId).then(response => {\r\n        return response.data;\r\n    });\r\n}\r\n\r\nasync function getEpaStations(huc, characteristicName) {\r\n    var url = \"https://www.waterqualitydata.us/data/Station/search?\";\r\n    var query =\r\n        \"startDateLo=01-01-2017&huc=\" +\r\n        huc +\r\n        \"&mimeType=xml&characteristicName=Nitrate\" +\r\n        characteristicName;\r\n    axios\r\n        .get(url + query)\r\n        .then(function(response) {\r\n            // handle success\r\n            console.log(response);\r\n            return convert.xml2json(response, { compact: true, spaces: 4 });\r\n        })\r\n        .catch(function(error) {\r\n            // handle error\r\n            console.log(error);\r\n            return \"She get wet\";\r\n        });\r\n}\r\n\r\nasync function getSampleResults(huc, characteristicName) {\r\n    var url = \"https://www.waterqualitydata.us/data/Result/search?\";\r\n    var query =\r\n        \"startDateLo=01-01-2017&huc=\" +\r\n        huc +\r\n        \"&mimeType=xml&characteristicName=\" +\r\n        characteristicName;\r\n    axios\r\n        .get(url + query)\r\n        .then(function(response) {\r\n            // handle success\r\n            console.log(response);\r\n            return response;\r\n        })\r\n        .catch(function(error) {\r\n            // handle error\r\n            console.log(error);\r\n            return \"She get wet\";\r\n        });\r\n}\r\n\r\nasync function getHuc(lat, long) {}\r\n\r\nexport default {\r\n    getEcoliData,\r\n    getFibiData,\r\n    getEpaStations,\r\n    getSampleResults,\r\n    getHuc\r\n};\r\n","\r\nimport axios from 'axios';\r\n\r\nasync function getHucFromAddress(address) {\r\n    var url = \"https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/findAddressCandidates\"\r\n    return axios.get(url, {\r\n        params: {\r\n            outFields: \"Loc_name,City,Place_addr,Region,RegionAbbr,Country\",\r\n            outSR: { \"latestWkid\": 3857, \"wkid\": 102100 },\r\n            f: \"json\",\r\n            SingleLine: address\r\n        }\r\n    })\r\n    .then((response) => {\r\n        if (typeof response.data.candidates[0] === 'undefined') {\r\n            return Promise.reject(\"address not found\")\r\n        }\r\n        var firstCandidate = response.data.candidates[0];\r\n        return {\r\n            spatialReference: response.data.spatialReference,\r\n            x: firstCandidate.location.x,\r\n            y: firstCandidate.location.y\r\n        };\r\n    })\r\n    .then((location) => {\r\n        return getWatershedData(location);\r\n    })\r\n}\r\n\r\nasync function getWatershedData(location) {\r\n    var url = \"https://inlandwaters.geoplatform.gov/arcgis/rest/services/NHDPlus/WatershedBoundaryDataset/MapServer/10/query\"\r\n\r\n    return axios.get(url, {\r\n        params: {\r\n            f: \"json\",\r\n            outFields: \"HUC12\",\r\n            spatialRel: \"esriSpatialRelIntersects\",\r\n            where: \"1=1\",\r\n            geometryType: \"esriGeometryPoint\",\r\n            inSR: \"102100\",\r\n            outSR: \"102100\",\r\n            geometry: location\r\n        }\r\n    }).then((response) => {\r\n        if (typeof response.data.features[0] === 'undefined') {\r\n            return Promise.reject(\"watershed not found\")\r\n        }\r\n        return response.data.features[0].attributes.HUC12;\r\n    })\r\n}\r\n\r\nexport default { getHucFromAddress };\r\n","import api from \"./api-client\";\r\nimport loc from \"./location-service\";\r\n\r\nasync function getData(address, layer) {\r\n    let huc = await loc.getHucFromAddress(address);\r\n    let results;\r\n\r\n    if (layer === \"fish\") {\r\n        results = await api.getFibiData(huc);\r\n    } else if (layer === \"swimming\") {\r\n        results = await api.getEcoliData(huc);\r\n    } else if (layer === \"drinking\") {\r\n        results = await api.getNitrateData(huc);\r\n    }\r\n    return results;\r\n}\r\n\r\nexport default { getData };","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport API from \"../../server-core/main-service\";\r\nimport \"./address.css\";\r\n\r\nclass AddressModal extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            address: \"\"\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange({ target }) {\r\n        this.setState({\r\n            \"address\": target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"modal\">\r\n                <CardHeader className=\"title\" title=\"TYPE YOUR ADDRESS\" />\r\n                <CardContent>\r\n                    <TextField\r\n                        className=\"address\"\r\n                        type=\"text\"\r\n                        value={this.state.address}\r\n                        placeholder=\"Enter Address Here..\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button\r\n                        className=\"nextButton\"\r\n                        size=\"medium\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => API.getData(this.state.address, \"swimming\")}\r\n                    >\r\n                        NEXT\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nAddressModal.propTypes = {\r\n    handleClose: PropTypes.func.isRequired,\r\n    show: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default AddressModal;\r\n","import React, { Component } from \"react\";\r\nimport {Map, Marker, GoogleApiWrapper, Polygon} from 'google-maps-react';\r\nimport \"./App.css\";\r\nimport Header from \"./ui-core/components/header\";\r\nimport AddressModal from \"./ui-core/modals/address\";\r\n\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n        secondary: {\r\n            main: \"#84ffff\"\r\n        }\r\n    },\r\n    typography: {\r\n        useNextVariants: true\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    render() {\r\n        const triangleCoords = [\r\n            {lat: 41.583943, lng: -93.629191},\r\n            {lat: 41.584208, lng: -93.627939},\r\n            {lat: 41.583247, lng: -93.627649},\r\n            {lat: 41.582972, lng: -93.628821},\r\n        ];\r\n\r\n        const style = {\r\n            width: '100%',\r\n            height: '100%'\r\n        };\r\n\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className=\"App\">\r\n                    <Header title=\"Find Water Quality Near Me\" />\r\n\r\n                    <Map\r\n                      google={this.props.google}\r\n                      style={style}\r\n                      zoom={17}\r\n                      initialCenter={{lat: 41.583586, lng: -93.628419}}>\r\n\r\n                        <Polygon\r\n                          paths={triangleCoords}\r\n                          strokeColor=\"#0000FF\"\r\n                          strokeOpacity={0.8}\r\n                          strokeWeight={2}\r\n                          fillColor=\"#0000FF\"\r\n                          fillOpacity={0.35} />\r\n\r\n                        <Marker position={{lat: 41.5839, lng: -93.6283}} />\r\n\r\n                        <Marker\r\n                          position={{lat: 41.5825, lng: -93.629}}\r\n                          icon={{\r\n                              url: \"/images/low.png\",\r\n                              anchor: new window.google.maps.Point(24,24),\r\n                              scaledSize: new window.google.maps.Size(48,48)\r\n                          }}\r\n                        />\r\n\r\n                        <Marker\r\n                          position={{lat: 41.5825, lng: -93.628025}}\r\n                          icon={{\r\n                              url: \"/images/med.png\",\r\n                              anchor: new window.google.maps.Point(24,24),\r\n                              scaledSize: new window.google.maps.Size(48,48)\r\n                          }}\r\n                        />\r\n\r\n                        <Marker\r\n                          position={{lat: 41.5825, lng: -93.627}}\r\n                          icon={{\r\n                              url: \"/images/high.png\",\r\n                              anchor: new window.google.maps.Point(24,24),\r\n                              scaledSize: new window.google.maps.Size(48,48)\r\n                          }}\r\n                        />\r\n\r\n\r\n                    </Map>\r\n\r\n                    <AddressModal handleClose={() => {}} show={true} />\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: ('AIzaSyBbQM-FxetsrzMqbJ2xzZbcbDUb9Au4nh4')\r\n})(App)\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'typeface-roboto';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}